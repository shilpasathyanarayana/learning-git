git init --- create empty git repositary/repo repos
git status---- access current status of git repo
git add file name
git commit -m "message"
(recieved an error - author identity unknown
Solved by adding email and name to git by running commands
git config --global user.email "shilpa.sathyanarayana5@gmail.com"
git config --global user.name "Shilpa Sathya Narayana")
git commit -m "message" ---after this file tracked in git
git push ---to push to git repo to git hub (remote repo)
git clone https://github.com/shilpasathyanarayana/learning-git.git (duplicating in another computer or folder)

How to generate personal access token?(PAT)
click on profile icon --> settings--> Devoloper settings-> personal access tokens --> tokens(classic)-->Generate new tokens--> Generate new tocken classic
login--> Note(Name)-->set desired expiration-->set all required permission--> click generate token
Copy the generated token and save it in secured location(available to copy only once)

git pulll ---(to fech the update from same git hub)--( to get update from same git hub repo)

:q! -- to close vim text editor on git bash
:wq! --to save and quit vim text editor on git bash

if there is commit not pushed and there is an update on the remote and you try to pull it will result in merge conflicts. what to do in that case.
These are the instructions given to git.

git config pull.rebase false  # merge (the default strategy)
git config pull.rebase true   # rebase
git config pull.ff only       # fast-forward only

These are some helpful hints given by git

How to create branches?
git checkout -b branch name

how to swich back to main branch?
git switch main branch name

How to discard the changes we made in current branch?
git stash

listing branches in git:
git branch or git branch -a

git log ( display all commit in branch)
1. git log --no-merges --raw --since="5 days ago"

git branch --merged branch name ( to list all the branches which are merged with branch name)

git revert <commit id>

git show branch:"file name" ( to view content of the file from the given branch)

git clean -f -d ( to remove all untracked files and folders)

git commit --amend -m "new message" (to make changes to last commit)

git diff <commit id1> <commit id 2> ( to know the difference between the the two commit id)

git cherry -v main ( to show all commits in the branch that have not been merged in to main branch)

git --help (to display all commands)

this line will be deleted after git revert


